---
openapi: 3.0.0
info:
  title: "Izanami API"
  description: |
    API of Izanami
  version: "1.0.0"
consumes:
  - application/json
produces:
  - application/json
components:
  schemas:
    PatchRequest:
      type: array
      items:
        $ref: "#/components/schemas/PatchDocument"
    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902
      required:
        - "op"
        - "path"
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - "add"
            - "remove"
            - "replace"
            - "move"
            - "copy"
            - "test"
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    domains.abtesting.Experiment:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        campaign:
          type: object
          $ref: '#/components/schemas/domains.abtesting.Campaign'
        variants:
          type: object
          $ref: '#/components/schemas/domains.abtesting.Variant'
    domains.abtesting.ExperimentVariantEvent:
      properties:
        id:
          type: string
        experimentId:
          type: ExperimentKey
        clientId:
          type: string
        variant:
          type: array
          $ref: '#/components/schemas/domains.abtesting.Variant'
        date:
          type: string
        transformation:
          type: number
        variantId:
          type: string
    domains.feature.Feature:
      properties:
        id:
          type: string
        enabled:
          type: boolean
        description:
          type: string
        parameters:
          type: object
          properties:
            activationStrategy:
              type: string
              required: true
              enum: [NO_STRATEGY, RELEASE_DATE, DATE_RANGE, SCRIPT, GLOBAL_SCRIPT, PERCENTAGE, HOUR_RANGE]
            releaseDate:
              type: string
              required: false
            from:
              type: string
              required: false
              format: date
            to:
              type: string
              required: false
              format: date
            percentage:
              type: number
              required: false
            ref:
              type: string
              required: true
            script:
              type: string
              required: false
            type:
              type: string
              required: false
              enum: [scala, javascript]
    domains.feature.FeatureActive:
      allOf:
        - $ref: '#/components/schemas/domains.feature.Feature'
        - type: object
          properties:
            active:
              type: boolean
    controllers.dto.feature.FeatureListResult:
      properties:
        results:
          type: array
          $ref: '#/components/schemas/domains.feature.Feature'
        metadata:
          page:
            required: true
            type: integer
          pageSize:
            required: true
            type: integer
          count:
            required: true
            type: integer
          nbPages:
            required: true
            type: integer
    ApiError:
      properties:
        message:
          type: string
        args:
          type: array
          items: string
    ApiErrors:
      properties:
        errors:
          type: array
          $ref: '#/components/schemas/ApiError'
        fieldErrors:
          type: object
          "additionalProperties": {
            "type": "array",
            "items": {
              $ref: '#/components/schemas/ApiError'
            }
          }

