"use strict";(self.webpackChunkizanami_documentation=self.webpackChunkizanami_documentation||[]).push([[1321],{9370:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>y,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var t=i(5893),s=i(1151);const a=i.p+"assets/images/key-empty-form-ddeb6328e27282ef6c654abf0c857109.png",o=i.p+"assets/images/key-filled-form-aa362b5c85d4abce4e9563e92164c7c5.png",c=i.p+"assets/images/key-modal-3c05946255217b6dc48ec5d053830373.png",r={title:"Creating API key"},d=void 0,l={id:"guides/key-configuration",title:"Creating API key",description:"API keys allow client application to call Izanami endpoints.",source:"@site/docs/04-guides/10-key-configuration.mdx",sourceDirName:"04-guides",slug:"/guides/key-configuration",permalink:"/izanami/docs/guides/key-configuration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Creating API key"},sidebar:"tutorialSidebar",previous:{title:"User invitation",permalink:"/izanami/docs/guides/user-invitation"},next:{title:"Configuring mailer",permalink:"/izanami/docs/guides/mailer-configuration"}},u={},p=[];function m(e){const n={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"API keys allow client application to call Izanami endpoints."}),"\n",(0,t.jsx)(n.p,{children:"Keys are either accredited to a list of projects, or declared admin."}),"\n",(0,t.jsx)(n.p,{children:"Admin keys can access every project for their tenants."}),"\n",(0,t.jsx)(n.p,{children:"To create a new key, you must have write authorization on tenant."}),"\n",(0,t.jsx)(n.p,{children:'Go to the "Key" menu, and click on "Create new key" button.'}),"\n",(0,t.jsx)("img",{src:a}),"\n",(0,t.jsx)(n.p,{children:"In this form, you must indicate a name for the new key, you can also specify whether it's an admin key or specify accredited projects for this key."}),"\n",(0,t.jsx)("img",{src:o}),"\n",(0,t.jsx)(n.p,{children:"Once your key is created, a modal is displayed that indicate client id and client secret."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Make sure you copy client secret"}),", once the modal is closed it won't be displayed again."]}),"\n",(0,t.jsx)("img",{src:c}),"\n",(0,t.jsx)(n.p,{children:"Once your api key is created, you can use it to query Izanami, by passing two headers :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Izanami-Client-Id"})," : client id of your key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Izanami-Client-Secret"})," : client secret of your key"]}),"\n"]})]})}function y(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>o});var t=i(7294);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);