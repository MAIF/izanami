"use strict";(self.webpackChunkizanami_documentation=self.webpackChunkizanami_documentation||[]).push([[968],{4510:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var s=n(5893),r=n(1151);const i={},t="For Developers",l={id:"developers",title:"For Developers",description:"Run React example with local react-izanami module",source:"@site/v1/20-developers.mdx",sourceDirName:".",slug:"/developers",permalink:"/izanami/v1/developers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Performances",permalink:"/izanami/v1/performances"}},c={},d=[{value:"Run React example with local react-izanami module",id:"run-react-example-with-local-react-izanami-module",level:2},{value:"Starting the server for developers",id:"starting-the-server-for-developers",level:2},{value:"Starting the js server",id:"starting-the-js-server",level:3},{value:"Starting play server",id:"starting-play-server",level:3},{value:"Use a specific DB",id:"use-a-specific-db",level:3},{value:"Redis",id:"redis",level:4},{value:"Elasticsearch",id:"elasticsearch",level:4},{value:"AWS DynamoDB",id:"aws-dynamodb",level:4},{value:"Kafka as Event store",id:"kafka-as-event-store",level:3},{value:"Akka as Event store",id:"akka-as-event-store",level:3}];function o(e){const a={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"for-developers",children:"For Developers"}),"\n",(0,s.jsx)(a.h2,{id:"run-react-example-with-local-react-izanami-module",children:"Run React example with local react-izanami module"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"cd izanami/example/javascript-react\nyarn run link-dev-react-izanami\n"})}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsxs)(a.p,{children:["\u26a0\ufe0f"," when your task is finished, run unlink-dev-react-izanami to stop the local resolution of dependency."]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"starting-the-server-for-developers",children:"Starting the server for developers"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"git clone https://github.com/MAIF/izanami.git --depth=1\n"})}),"\n",(0,s.jsx)(a.h3,{id:"starting-the-js-server",children:"Starting the js server"}),"\n",(0,s.jsx)(a.p,{children:"Then go to the js folder :"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"cd izanami-server/javascript\n"})}),"\n",(0,s.jsx)(a.p,{children:"And then"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"yarn install \nyarn start  \n"})}),"\n",(0,s.jsx)(a.h3,{id:"starting-play-server",children:"Starting play server"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run \n"})}),"\n",(0,s.jsx)(a.h3,{id:"use-a-specific-db",children:"Use a specific DB"}),"\n",(0,s.jsx)(a.p,{children:"You use a specific data base using docker"}),"\n",(0,s.jsx)(a.h4,{id:"redis",children:"Redis"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker rm redis-iznanami && docker run --name redis-iznanami -v $(pwd)/redisdata:/data -p 6379:6379 redis\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.db.default=Redis\n"})}),"\n",(0,s.jsx)(a.h4,{id:"elasticsearch",children:"Elasticsearch"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:'docker rm elasticsearch && docker run --name elasticsearch -e "xpack.security.enabled=false" -e "ES_JAVA_OPTS=-Xms512m -Xmx512m" -e "discovery.type=single-node" -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch:7.11.1\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.db.default=Elastic\n"})}),"\n",(0,s.jsx)(a.h4,{id:"aws-dynamodb",children:"AWS DynamoDB"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker rm dynamodb && docker run --name dynamodb -p 8000:8000 amazon/dynamodb-local\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.db.default=Dynamo -Dizanami.db.dynamo.host=localhost -Dizanami.db.dynamo.port=8000\n"})}),"\n",(0,s.jsx)(a.h3,{id:"kafka-as-event-store",children:"Kafka as Event store"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker run -p 2181:2181 -p 9092:9092 --env ADVERTISED_HOST=127.0.0.1 --env ADVERTISED_PORT=9092 --env AUTO.CREATE.TOPICS.ENABLE spotify/kafka\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.events.store=Kafka \n"})}),"\n",(0,s.jsx)(a.h3,{id:"akka-as-event-store",children:"Akka as Event store"}),"\n",(0,s.jsx)(a.p,{children:"First node"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.events.store=Distributed \n"})}),"\n",(0,s.jsx)(a.p,{children:"Second node"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sbtshell",children:"sbt \n> ~izanami-server/run -Dizanami.events.store=Distributed -Dcluster.akka.remote.netty.tcp.port=2552 -Dhttp.port=9001 \n"})})]})}function h(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>l,a:()=>t});var s=n(7294);const r={},i=s.createContext(r);function t(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);