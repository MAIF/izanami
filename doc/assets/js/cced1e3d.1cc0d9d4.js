"use strict";(self.webpackChunkizanami_documentation=self.webpackChunkizanami_documentation||[]).push([[8038],{1854:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var i=n(5893),r=n(1151);const s=n.p+"assets/images/architecture-b74726e9bdefbc70c9866eee5583d54b.png",a={title:"Architecture"},o="Architecture",c={id:"architecture",title:"Architecture",description:"As said before, Izanami provide different features :",source:"@site/v1/05-architecture.mdx",sourceDirName:".",slug:"/architecture",permalink:"/izanami/v1/architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Architecture"},sidebar:"defaultSidebar",previous:{title:"What's in the box",permalink:"/izanami/v1/features"},next:{title:"Get Izanami",permalink:"/izanami/v1/getizanami/"}},l={},u=[];function d(e){const t={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(t.p,{children:"As said before, Izanami provide different features :"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"API first"}),"\n",(0,i.jsx)(t.li,{children:"Multi data store (In Memory, Level DB, redis, elasticsearch, AWS DynamoDB)"}),"\n",(0,i.jsx)(t.li,{children:"Listenable events (SSE, webhooks)"}),"\n",(0,i.jsx)(t.li,{children:"Multi event store (In Memory, Redis, Kafka, Akka distributed pub / sub)"}),"\n"]}),"\n",(0,i.jsx)("img",{src:s}),"\n",(0,i.jsx)(t.p,{children:"The data of each domains (features, configs, experiments ...) are compartmentalized in buckets.\nIzanami can be plugged with 2 or more databases at the same time where each database store one or more bucket."}),"\n",(0,i.jsx)(t.p,{children:"Izanami contains the following buckets :"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"features: to store features"}),"\n",(0,i.jsx)(t.li,{children:"configs: to store configs"}),"\n",(0,i.jsx)(t.li,{children:"experiments: to store A / B testing experiments"}),"\n",(0,i.jsx)(t.li,{children:"variant binding: to store the association between a user and an experiment's variant"}),"\n",(0,i.jsx)(t.li,{children:"experiment events: to store the event about an experiment (displayed, won)"}),"\n",(0,i.jsx)(t.li,{children:"global scripts: to store script used by features"}),"\n",(0,i.jsx)(t.li,{children:"api keys: to store api keys"}),"\n",(0,i.jsx)(t.li,{children:"web hooks: to store registered webhook"}),"\n",(0,i.jsx)(t.li,{children:"users: to store users"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You can see how to configure buckets on the ",(0,i.jsx)(t.a,{href:"./settings",children:"settings"})," page."]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var i=n(7294);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);