name: build-package

on:
  push:
    branches:
      - "**"
      - "!master"
jobs:
  build-package:
    runs-on: ubuntu-latest
    name: "Build server package"
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/load-versions
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt/boot
            ~/.sbt
            ~/.coursier
            ~/.nvm
            ~/.yarn-cache
          key: ${{ runner.os }}-izanami
      - uses: ./.github/workflows/java-opts
      - run: |
          ./scripts/build-javascript.sh
          sbt  -Dsbt.color=always -Dsbt.supershell=false ";izanami-server/assembly;izanami-server/dist;izanami-server/docker:publishLocal;+jvm/publishLocal;izanami-spring/publishLocal"
      - uses: ./.github/workflows/clean-cache
  build-rust:
    runs-on: ${{ matrix.os }}
    name: "Build rust cli"
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./izanami-clients/izanami-cli/target
          key: ${{ runner.os }}-rust-izanami-${{ hashFiles('./izanami-clients/izanami-cli/Cargo.lock') }}
      - run: ./scripts/build-rust.sh
