spring:
  profiles:
    active:
      - prod
      - dev
  mvc:
    static-path-pattern: "/assets/**"
  cloud:
    config:
      uri: "http://localhost:9000/api/config-server/raw"
      username: xxxx
      password: xxxx
frontend:
  type: "REACT"
leveldb:
  path: "leveldb/datas"
betaserie:
  apikey: "a8dd8ebe25e9"
  url: "https://api.betaseries.com"
tvdb:
  apikey: "92466265017F27E4"
  url: "https://api.thetvdb.com"
  banner: "https://www.thetvdb.com/banners/"
otoroshi:
  sharedKey: "otoroshisharedkey"
  issuer: "Otoroshi"
  claimHeaderName: "Otoroshi-Claim"
  requestIdHeaderName: "Otoroshi-Request-Id"
  stateHeaderName: "Otoroshi-State"
  stateRespHeaderName: "Otoroshi-State-Resp"
izanami:
  host: http://localhost:9000
  client-id: xxxx
  client-secret: xxxx
  backend: SseBackend
  dispatcher: izanami.blocking-dispatcher
  feature:
    strategy:
      type: DevStrategy
    fallback: >
      [
        { "id": "mytvshows:season:markaswatched", "enabled": false },
        { "id": "mytvshows:providers:tvdb", "enabled": true },
        { "id": "mytvshows:providers:betaserie", "enabled": false },
        { "id": "mytvshows:providers:omdb", "enabled": false }
      ]
    autocreate: true
  config:
    fallback: >
      [
        { "id": "izanami:example:config", "value": { "emailProvider": "test" } }
      ]
    strategy:
      type: DevStrategy
    autocreate: true
  experiment:
    fallback: >
      [
        {
          "id": "mytvshows:gotoepisodes:button",
          "name": "Test button",
          "description": "Test button",
          "enabled": true,
          "variant": {
            "id": "A",
            "name": "Variant A",
            "description": "Variant A"
          }
        }
      ]
    strategy:
      type: DevStrategy
  proxy:
    feature:
      patterns: mytvshows:*
    experiment:
      patterns: mytvshows:*
